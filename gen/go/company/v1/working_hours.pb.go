// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: company/v1/working_hours.proto

package companyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents working hours configuration for all days of the week for a location
type LocationWorkingHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocationId string       `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Monday     *DaySchedule `protobuf:"bytes,3,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday    *DaySchedule `protobuf:"bytes,4,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday  *DaySchedule `protobuf:"bytes,5,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday   *DaySchedule `protobuf:"bytes,6,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday     *DaySchedule `protobuf:"bytes,7,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday   *DaySchedule `protobuf:"bytes,8,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday     *DaySchedule `protobuf:"bytes,9,opt,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *LocationWorkingHours) Reset() {
	*x = LocationWorkingHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationWorkingHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationWorkingHours) ProtoMessage() {}

func (x *LocationWorkingHours) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationWorkingHours.ProtoReflect.Descriptor instead.
func (*LocationWorkingHours) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{0}
}

func (x *LocationWorkingHours) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LocationWorkingHours) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *LocationWorkingHours) GetMonday() *DaySchedule {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *LocationWorkingHours) GetTuesday() *DaySchedule {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *LocationWorkingHours) GetWednesday() *DaySchedule {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *LocationWorkingHours) GetThursday() *DaySchedule {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *LocationWorkingHours) GetFriday() *DaySchedule {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *LocationWorkingHours) GetSaturday() *DaySchedule {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *LocationWorkingHours) GetSunday() *DaySchedule {
	if x != nil {
		return x.Sunday
	}
	return nil
}

// Represents schedule for a single day
type DaySchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayOfWeek string `protobuf:"bytes,1,opt,name=day_of_week,json=dayOfWeek,proto3" json:"day_of_week,omitempty"`
	Start     string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`      // Time in HH:MM format
	End       string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`          // Time in HH:MM format
	Enabled   bool   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"` // Whether the business is open on this day
}

func (x *DaySchedule) Reset() {
	*x = DaySchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaySchedule) ProtoMessage() {}

func (x *DaySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaySchedule.ProtoReflect.Descriptor instead.
func (*DaySchedule) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{1}
}

func (x *DaySchedule) GetDayOfWeek() string {
	if x != nil {
		return x.DayOfWeek
	}
	return ""
}

func (x *DaySchedule) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *DaySchedule) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *DaySchedule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Request to set working hours for a location
type SetLocationWorkingHoursRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId string       `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Monday     *DaySchedule `protobuf:"bytes,2,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday    *DaySchedule `protobuf:"bytes,3,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday  *DaySchedule `protobuf:"bytes,4,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday   *DaySchedule `protobuf:"bytes,5,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday     *DaySchedule `protobuf:"bytes,6,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday   *DaySchedule `protobuf:"bytes,7,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday     *DaySchedule `protobuf:"bytes,8,opt,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *SetLocationWorkingHoursRequest) Reset() {
	*x = SetLocationWorkingHoursRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocationWorkingHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocationWorkingHoursRequest) ProtoMessage() {}

func (x *SetLocationWorkingHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocationWorkingHoursRequest.ProtoReflect.Descriptor instead.
func (*SetLocationWorkingHoursRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{2}
}

func (x *SetLocationWorkingHoursRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *SetLocationWorkingHoursRequest) GetMonday() *DaySchedule {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *SetLocationWorkingHoursRequest) GetTuesday() *DaySchedule {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *SetLocationWorkingHoursRequest) GetWednesday() *DaySchedule {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *SetLocationWorkingHoursRequest) GetThursday() *DaySchedule {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *SetLocationWorkingHoursRequest) GetFriday() *DaySchedule {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *SetLocationWorkingHoursRequest) GetSaturday() *DaySchedule {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *SetLocationWorkingHoursRequest) GetSunday() *DaySchedule {
	if x != nil {
		return x.Sunday
	}
	return nil
}

// Response after setting working hours for a location
type SetLocationWorkingHoursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkingHours *LocationWorkingHours `protobuf:"bytes,1,opt,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
}

func (x *SetLocationWorkingHoursResponse) Reset() {
	*x = SetLocationWorkingHoursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocationWorkingHoursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocationWorkingHoursResponse) ProtoMessage() {}

func (x *SetLocationWorkingHoursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocationWorkingHoursResponse.ProtoReflect.Descriptor instead.
func (*SetLocationWorkingHoursResponse) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{3}
}

func (x *SetLocationWorkingHoursResponse) GetWorkingHours() *LocationWorkingHours {
	if x != nil {
		return x.WorkingHours
	}
	return nil
}

// Request to get working hours for a location
type GetLocationWorkingHoursRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
}

func (x *GetLocationWorkingHoursRequest) Reset() {
	*x = GetLocationWorkingHoursRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationWorkingHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationWorkingHoursRequest) ProtoMessage() {}

func (x *GetLocationWorkingHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationWorkingHoursRequest.ProtoReflect.Descriptor instead.
func (*GetLocationWorkingHoursRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{4}
}

func (x *GetLocationWorkingHoursRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

// Response with working hours for a location
type GetLocationWorkingHoursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkingHours *LocationWorkingHours `protobuf:"bytes,1,opt,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
}

func (x *GetLocationWorkingHoursResponse) Reset() {
	*x = GetLocationWorkingHoursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationWorkingHoursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationWorkingHoursResponse) ProtoMessage() {}

func (x *GetLocationWorkingHoursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationWorkingHoursResponse.ProtoReflect.Descriptor instead.
func (*GetLocationWorkingHoursResponse) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{5}
}

func (x *GetLocationWorkingHoursResponse) GetWorkingHours() *LocationWorkingHours {
	if x != nil {
		return x.WorkingHours
	}
	return nil
}

// Request to update working hours for a location
type UpdateLocationWorkingHoursRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId string       `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Monday     *DaySchedule `protobuf:"bytes,2,opt,name=monday,proto3" json:"monday,omitempty"`
	Tuesday    *DaySchedule `protobuf:"bytes,3,opt,name=tuesday,proto3" json:"tuesday,omitempty"`
	Wednesday  *DaySchedule `protobuf:"bytes,4,opt,name=wednesday,proto3" json:"wednesday,omitempty"`
	Thursday   *DaySchedule `protobuf:"bytes,5,opt,name=thursday,proto3" json:"thursday,omitempty"`
	Friday     *DaySchedule `protobuf:"bytes,6,opt,name=friday,proto3" json:"friday,omitempty"`
	Saturday   *DaySchedule `protobuf:"bytes,7,opt,name=saturday,proto3" json:"saturday,omitempty"`
	Sunday     *DaySchedule `protobuf:"bytes,8,opt,name=sunday,proto3" json:"sunday,omitempty"`
}

func (x *UpdateLocationWorkingHoursRequest) Reset() {
	*x = UpdateLocationWorkingHoursRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationWorkingHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationWorkingHoursRequest) ProtoMessage() {}

func (x *UpdateLocationWorkingHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationWorkingHoursRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocationWorkingHoursRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLocationWorkingHoursRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *UpdateLocationWorkingHoursRequest) GetMonday() *DaySchedule {
	if x != nil {
		return x.Monday
	}
	return nil
}

func (x *UpdateLocationWorkingHoursRequest) GetTuesday() *DaySchedule {
	if x != nil {
		return x.Tuesday
	}
	return nil
}

func (x *UpdateLocationWorkingHoursRequest) GetWednesday() *DaySchedule {
	if x != nil {
		return x.Wednesday
	}
	return nil
}

func (x *UpdateLocationWorkingHoursRequest) GetThursday() *DaySchedule {
	if x != nil {
		return x.Thursday
	}
	return nil
}

func (x *UpdateLocationWorkingHoursRequest) GetFriday() *DaySchedule {
	if x != nil {
		return x.Friday
	}
	return nil
}

func (x *UpdateLocationWorkingHoursRequest) GetSaturday() *DaySchedule {
	if x != nil {
		return x.Saturday
	}
	return nil
}

func (x *UpdateLocationWorkingHoursRequest) GetSunday() *DaySchedule {
	if x != nil {
		return x.Sunday
	}
	return nil
}

// Response after updating working hours for a location
type UpdateLocationWorkingHoursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkingHours *LocationWorkingHours `protobuf:"bytes,1,opt,name=working_hours,json=workingHours,proto3" json:"working_hours,omitempty"`
}

func (x *UpdateLocationWorkingHoursResponse) Reset() {
	*x = UpdateLocationWorkingHoursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationWorkingHoursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationWorkingHoursResponse) ProtoMessage() {}

func (x *UpdateLocationWorkingHoursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationWorkingHoursResponse.ProtoReflect.Descriptor instead.
func (*UpdateLocationWorkingHoursResponse) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateLocationWorkingHoursResponse) GetWorkingHours() *LocationWorkingHours {
	if x != nil {
		return x.WorkingHours
	}
	return nil
}

// Request to delete working hours for a location
type DeleteLocationWorkingHoursRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
}

func (x *DeleteLocationWorkingHoursRequest) Reset() {
	*x = DeleteLocationWorkingHoursRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationWorkingHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationWorkingHoursRequest) ProtoMessage() {}

func (x *DeleteLocationWorkingHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationWorkingHoursRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocationWorkingHoursRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteLocationWorkingHoursRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

// Response after deleting working hours for a location
type DeleteLocationWorkingHoursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteLocationWorkingHoursResponse) Reset() {
	*x = DeleteLocationWorkingHoursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_v1_working_hours_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationWorkingHoursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationWorkingHoursResponse) ProtoMessage() {}

func (x *DeleteLocationWorkingHoursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_working_hours_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationWorkingHoursResponse.ProtoReflect.Descriptor instead.
func (*DeleteLocationWorkingHoursResponse) Descriptor() ([]byte, []int) {
	return file_company_v1_working_hours_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteLocationWorkingHoursResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteLocationWorkingHoursResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_company_v1_working_hours_proto protoreflect.FileDescriptor

var file_company_v1_working_hours_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x99, 0x03, 0x0a, 0x14, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61,
	0x79, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61,
	0x79, 0x12, 0x32, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44,
	0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e,
	0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x74,
	0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x66,
	0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73,
	0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x73,
	0x75, 0x6e, 0x64, 0x61, 0x79, 0x22, 0x6f, 0x0a, 0x0b, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x77,
	0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66,
	0x57, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x93, 0x03, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x6f,
	0x6e, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73,
	0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e,
	0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x08,
	0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x12, 0x2c,
	0x0a, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x08,
	0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x2c,
	0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x22, 0x65, 0x0a, 0x1f,
	0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x22, 0x41, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x96, 0x03,
	0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44,
	0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x64,
	0x61, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x61,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x74, 0x75, 0x65, 0x73, 0x64,
	0x61, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x77, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x77, 0x65, 0x64,
	0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x72, 0x73, 0x64,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08,
	0x74, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x64,
	0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06,
	0x66, 0x72, 0x69, 0x64, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x75, 0x72, 0x64,
	0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08,
	0x73, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x64,
	0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06,
	0x73, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x22, 0x68, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x22, 0x44, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0xe8, 0x02, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x61, 0x6c, 0x65, 0x6b, 0x73,
	0x65, 0x79, 0x63, 0x68, 0x75, 0x6b, 0x2f, 0x6d, 0x79, 0x2d, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_company_v1_working_hours_proto_rawDescOnce sync.Once
	file_company_v1_working_hours_proto_rawDescData = file_company_v1_working_hours_proto_rawDesc
)

func file_company_v1_working_hours_proto_rawDescGZIP() []byte {
	file_company_v1_working_hours_proto_rawDescOnce.Do(func() {
		file_company_v1_working_hours_proto_rawDescData = protoimpl.X.CompressGZIP(file_company_v1_working_hours_proto_rawDescData)
	})
	return file_company_v1_working_hours_proto_rawDescData
}

var file_company_v1_working_hours_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_company_v1_working_hours_proto_goTypes = []interface{}{
	(*LocationWorkingHours)(nil),               // 0: company.LocationWorkingHours
	(*DaySchedule)(nil),                        // 1: company.DaySchedule
	(*SetLocationWorkingHoursRequest)(nil),     // 2: company.SetLocationWorkingHoursRequest
	(*SetLocationWorkingHoursResponse)(nil),    // 3: company.SetLocationWorkingHoursResponse
	(*GetLocationWorkingHoursRequest)(nil),     // 4: company.GetLocationWorkingHoursRequest
	(*GetLocationWorkingHoursResponse)(nil),    // 5: company.GetLocationWorkingHoursResponse
	(*UpdateLocationWorkingHoursRequest)(nil),  // 6: company.UpdateLocationWorkingHoursRequest
	(*UpdateLocationWorkingHoursResponse)(nil), // 7: company.UpdateLocationWorkingHoursResponse
	(*DeleteLocationWorkingHoursRequest)(nil),  // 8: company.DeleteLocationWorkingHoursRequest
	(*DeleteLocationWorkingHoursResponse)(nil), // 9: company.DeleteLocationWorkingHoursResponse
}
var file_company_v1_working_hours_proto_depIdxs = []int32{
	1,  // 0: company.LocationWorkingHours.monday:type_name -> company.DaySchedule
	1,  // 1: company.LocationWorkingHours.tuesday:type_name -> company.DaySchedule
	1,  // 2: company.LocationWorkingHours.wednesday:type_name -> company.DaySchedule
	1,  // 3: company.LocationWorkingHours.thursday:type_name -> company.DaySchedule
	1,  // 4: company.LocationWorkingHours.friday:type_name -> company.DaySchedule
	1,  // 5: company.LocationWorkingHours.saturday:type_name -> company.DaySchedule
	1,  // 6: company.LocationWorkingHours.sunday:type_name -> company.DaySchedule
	1,  // 7: company.SetLocationWorkingHoursRequest.monday:type_name -> company.DaySchedule
	1,  // 8: company.SetLocationWorkingHoursRequest.tuesday:type_name -> company.DaySchedule
	1,  // 9: company.SetLocationWorkingHoursRequest.wednesday:type_name -> company.DaySchedule
	1,  // 10: company.SetLocationWorkingHoursRequest.thursday:type_name -> company.DaySchedule
	1,  // 11: company.SetLocationWorkingHoursRequest.friday:type_name -> company.DaySchedule
	1,  // 12: company.SetLocationWorkingHoursRequest.saturday:type_name -> company.DaySchedule
	1,  // 13: company.SetLocationWorkingHoursRequest.sunday:type_name -> company.DaySchedule
	0,  // 14: company.SetLocationWorkingHoursResponse.working_hours:type_name -> company.LocationWorkingHours
	0,  // 15: company.GetLocationWorkingHoursResponse.working_hours:type_name -> company.LocationWorkingHours
	1,  // 16: company.UpdateLocationWorkingHoursRequest.monday:type_name -> company.DaySchedule
	1,  // 17: company.UpdateLocationWorkingHoursRequest.tuesday:type_name -> company.DaySchedule
	1,  // 18: company.UpdateLocationWorkingHoursRequest.wednesday:type_name -> company.DaySchedule
	1,  // 19: company.UpdateLocationWorkingHoursRequest.thursday:type_name -> company.DaySchedule
	1,  // 20: company.UpdateLocationWorkingHoursRequest.friday:type_name -> company.DaySchedule
	1,  // 21: company.UpdateLocationWorkingHoursRequest.saturday:type_name -> company.DaySchedule
	1,  // 22: company.UpdateLocationWorkingHoursRequest.sunday:type_name -> company.DaySchedule
	0,  // 23: company.UpdateLocationWorkingHoursResponse.working_hours:type_name -> company.LocationWorkingHours
	2,  // 24: company.WorkingHoursService.SetLocationWorkingHours:input_type -> company.SetLocationWorkingHoursRequest
	4,  // 25: company.WorkingHoursService.GetLocationWorkingHours:input_type -> company.GetLocationWorkingHoursRequest
	8,  // 26: company.WorkingHoursService.DeleteLocationWorkingHours:input_type -> company.DeleteLocationWorkingHoursRequest
	3,  // 27: company.WorkingHoursService.SetLocationWorkingHours:output_type -> company.SetLocationWorkingHoursResponse
	5,  // 28: company.WorkingHoursService.GetLocationWorkingHours:output_type -> company.GetLocationWorkingHoursResponse
	9,  // 29: company.WorkingHoursService.DeleteLocationWorkingHours:output_type -> company.DeleteLocationWorkingHoursResponse
	27, // [27:30] is the sub-list for method output_type
	24, // [24:27] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_company_v1_working_hours_proto_init() }
func file_company_v1_working_hours_proto_init() {
	if File_company_v1_working_hours_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_company_v1_working_hours_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationWorkingHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaySchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocationWorkingHoursRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocationWorkingHoursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationWorkingHoursRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationWorkingHoursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationWorkingHoursRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationWorkingHoursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationWorkingHoursRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_v1_working_hours_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationWorkingHoursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_company_v1_working_hours_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_company_v1_working_hours_proto_goTypes,
		DependencyIndexes: file_company_v1_working_hours_proto_depIdxs,
		MessageInfos:      file_company_v1_working_hours_proto_msgTypes,
	}.Build()
	File_company_v1_working_hours_proto = out.File
	file_company_v1_working_hours_proto_rawDesc = nil
	file_company_v1_working_hours_proto_goTypes = nil
	file_company_v1_working_hours_proto_depIdxs = nil
}
